#!/bin/bash

set -eo pipefail

if [ -z "${CFSSL_CA_HOST}" ]; then
  >&2 echo "CFSSL_CA_HOST is not set"
  exit 1
fi

if [ ! -f "ca.pem" ];then
  cat <<EOF > ca.json
{
  "hosts": [
    "${CFSSL_CA_HOST}"
  ],
  "key": {
    "algo": "${CFSSL_CA_ALGO}",
    "size": ${CFSSL_CA_KEY_SIZE}
  },
  "names": [{
    "O": "${CFSSL_CA_ORGANIZATION}",
    "OU": "${CFSSL_CA_ORGANIZATIONAL_UNIT}"
  }]
}
EOF

  cfssl genkey -initca ca.json | cfssljson -bare ca
fi

if [ -n "${CFSSL_CA_AUTH_KEY}"]; then
  CFSSL_CA_AUTH_KEY=`openssl rand -hex 16`
  echo "Generated auth key: ${CFSSL_CA_AUTH_KEY}"
fi

if [ ! -f ${CFSSL_CA_POLICY_FILE} ]; then
  cat <<EOF > ${CFSSL_CA_POLICY_FILE}
{
  "signing": {
    "default": {
      "auth_key": "auth_key",
      "expiry": "8760h",
      "usages": [
         "signing",
         "key encipherment",
         "server auth"
       ]
     }
  },
  "auth_keys": {
    "auth_key": {
      "key": "${CFSSL_CA_AUTH_KEY}",
      "type": "standard"
    }
  }
}
EOF
fi

if [ ! -f "server.pem" ];then
  cfssl gencert -ca ca.pem -ca-key ca-key.pem ca.json | cfssljson -bare server
fi

cfssl serve -address=localhost -port=${CFSSL_PORT} -config=${CFSSL_CA_POLICY_FILE} -ca-bundle=/etc/cfssl/ca-bundle.crt -int-bundle=/etc/cfssl/int-bundle.crt -int-dir=/etc/cfssl/data/intermediates &

exec nginx -c /etc/nginx/nginx.conf

# vim: set ft=sh:
